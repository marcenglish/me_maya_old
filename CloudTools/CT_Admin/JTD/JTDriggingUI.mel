source JTDarmRig;
//source JTDlegRig;
source JTDspineRig;
source JTDneckRig;
source JTDdynParent;
source JTDfingerRig;

JTDtoolsWindow;

global proc JTDtoolsWindow()
{
int $aimModifier = 0;
int $upModifier = 0;
int $worldModifier = 0;

if ((`window -ex JTDtoolsWindow`) == true) deleteUI -window JTDtoolsWindow;
if((`windowPref -exists JTDtoolsWindow`) == 1) windowPref -remove JTDtoolsWindow;

window 	-title "JTDtools"
	-width 400
	-height 525
	-menuBar true
	-rtf false
	JTDtoolsWindow;
	
	menu -label "About" -tearOff false;
	//menuItem -divider true;
	menuItem -label "John Doublestein's website"
		 -c "showHelp -a \"www.johndoublestein.com\""
		 -ann "Opens John Doublestein's website.";	
				
 	string $base = `formLayout -numberOfDivisions 100`;
 	
 	textFieldGrp -label "Name"
 		     -cw2 60 120
 		     chartfg;
  				
  	formLayout -e 
  		   -attachForm chartfg "left" 5
  		   -attachForm chartfg "top" 5
		   $base;
 	
 	textFieldButtonGrp -label "World" 
 			   -cw3 60 120 50
 			   -buttonLabel "<<<"
 			   -buttonCommand "textFieldButtonGrp -e -text \`ls -sl -typ transform\` worldfbg;" 
 			   worldfbg;
 				
 	formLayout -e 
 		   -attachForm worldfbg "left" 5
 		   -attachForm worldfbg "top" 31
		   $base;
			   
 	floatSliderGrp -l Scale
 		       -v 1
 		       -field true
 		       -minValue 0 -maxValue 5
 		       -fieldMinValue 0 -fieldMaxValue 5
 		       -cw3 60 30 30
 		       fsg1;
 		   
 	formLayout -e 
 		   -attachForm fsg1 "left" 5
 		   -attachForm fsg1 "top" 61
		   $base;
	
	string $tabs = `tabLayout`;
	
	formLayout -e 
		   -attachForm $tabs "top" 90
		   -attachForm $tabs "left" 5
		   -attachPosition $tabs "right" 0 100
		   $base;
		   
	string $tab1 = `formLayout -numberOfDivisions 100 -h 455`;
	
	button  -label "Show Rot Axis"
			-command "toggle -st true -la;"
			-width 115
			-height 20
			-al "center"
			"axisOn";
			
	formLayout -e 
		   -attachForm axisOn "top" 10
		   -attachForm axisOn "left" 5
		   -attachPosition axisOn "right" 0 50
		   $tab1;
		   
	button  -label "Hide Rot Axis"
		-command "toggle -st false -la;"
		-width 115
		-height 20
		-al "center"
		"axisOff";
				
	formLayout -e 
		   -attachForm axisOff "top" 10
		   -attachForm axisOff "left" 5
		   -attachControl axisOff "left" 5 axisOn
		   $tab1;

	radioButtonGrp  -numberOfRadioButtons 3
			-l "Aim Axis"
			-labelArray3 "X" "Y" "Z"
			-sl 1
			-cw4 85 30 30 30
			-ct4 "left" "left" "left" "left"
			"rb1"
			;
			
	formLayout -e 
		   -attachForm rb1 "top" 40
		   -attachForm rb1 "left" 5
		   -attachPosition rb1 "right" 0 75
		   $tab1;
	
	checkBox 	-w 200
			-v 0
			-label "Negative"
			"cb1";
	
	formLayout -e 
		   -attachForm cb1 "top" 40
		   -attachControl cb1 "left" 0 rb1
		   $tab1;
	
	radioButtonGrp  -numberOfRadioButtons 3
			-l "Up Vector"
			-labelArray3 "X" "Y" "Z"
			-sl 2
			-cw4 85 30 30 30
			-ct4 "left" "left" "left" "left"
			"rb2"
			;
	
	formLayout -e 
		   -attachForm rb2 "top" 60
		   -attachForm rb2 "left" 5
		   -attachPosition rb2 "right" 0 75
		   $tab1;
	
	checkBox 	-w 200
			-v 0
			-label "Negative"
			"cb2";
			
	formLayout -e 
		   -attachForm cb2 "top" 60
		   -attachControl cb2 "left" 0 rb2
		   $tab1;
	
	radioButtonGrp  -numberOfRadioButtons 3
			-l "World Up Vector"
			-labelArray3 "X" "Y" "Z"
			-sl 2
			-cw4 85 30 30 30
			-ct4 "left" "left" "left" "left"
			"rb3"
			;
			
	formLayout -e 
		   -attachForm rb3 "top" 80
		   -attachForm rb3 "left" 5
		   -attachPosition rb3 "right" 0 75
		   $tab1;
	
	checkBox 	-w 200
			-v 0
			-label "Negative"
			"cb3";
				
	formLayout -e 
		   -attachForm cb3 "top" 80
		   -attachControl cb3 "left" 0 rb3
		   $tab1;
	
	checkBox 	-w 200
			-v 0
			-label "  Use 3 Joint Normal as World Up"
			-onCommand  "radioButtonGrp -e -enable false rb3"
			-offCommand  "radioButtonGrp -e -enable true rb3"
			"cb4";
			
	formLayout -e 
		   -attachForm cb4 "top" 100
		   -attachForm cb4 "left" 5
		   -attachPosition cb4 "right" 0 75
		   $tab1;
		   
	checkBox 	-w 200
			-v 0
			-label "  Orient to World"
			-onCommand  "radioButtonGrp -e -enable false rb1; checkBox -e -enable false cb1; radioButtonGrp -e -enable false rb2; checkBox -e -enable false cb2; radioButtonGrp -e -enable false rb3; checkBox -e -enable false cb3; checkBox -e -enable false cb4;"
			-offCommand  "radioButtonGrp -e -enable true rb1; checkBox -e -enable true cb1; radioButtonGrp -e -enable true rb2; checkBox -e -enable true cb2; radioButtonGrp -e -enable true rb3; checkBox -e -enable true cb3; checkBox -e -enable true cb4;"
			"worldcb";
			
	formLayout -e 
		   -attachForm worldcb "top" 120
		   -attachForm worldcb "left" 5
		   -attachPosition worldcb "right" 0 75
		   $tab1;
		   
	checkBox 	-w 200
			-v 0
			-label "  Manually Oriented"
			-onCommand  "radioButtonGrp -e -enable false rb1; checkBox -e -enable false cb1; radioButtonGrp -e -enable false rb2; checkBox -e -enable false cb2; radioButtonGrp -e -enable false rb3; checkBox -e -enable false cb3; checkBox -e -enable false cb4; checkBox -e -enable false worldcb;"
			-offCommand  "radioButtonGrp -e -enable true rb1; checkBox -e -enable true cb1; radioButtonGrp -e -enable true rb2; checkBox -e -enable true cb2; radioButtonGrp -e -enable true rb3; checkBox -e -enable true cb3; checkBox -e -enable true cb4; checkBox -e -enable true worldcb;"
			"manualcb";
			
	formLayout -e 
		   -attachForm manualcb "top" 140
		   -attachForm manualcb "left" 5
		   -attachPosition manualcb "right" 0 75
		   $tab1;
	 		
	button  -label "Set Joint Orientation"
		-command "if(`checkBox -q -v cb1`== 1) $aimModifier = -1; else $aimModifier = 1; if(`checkBox -q -v cb2`== 1) $upModifier = -1; else $upModifier = 1; if(`checkBox -q -v cb3`== 1) $worldModifier = -1; else $worldModifier = 1; JTDorientJoint(`ls -sl`, (`radioButtonGrp -q -sl rb1`*$aimModifier), (`radioButtonGrp -q -sl rb2`*$upModifier), (`radioButtonGrp -q -sl rb3`*$worldModifier), (`checkBox -q -v cb4`*$worldModifier), `checkBox -q -v worldcb`, `checkBox -q -v manualcb`);"
		-width 80
		-height 32
		-al "center"
		"b1";
		
	formLayout -e 
		   -attachForm b1 "top" 160
		   -attachForm b1 "left" 50
		   -attachPosition b1 "right" 0 80
		   $tab1;

	frameLayout -l " Advanced" 
		    -cll true 
		    -cl true
		    -bv false
		    "jointAdvanced";
	
	formLayout -numberOfDivisions 100
		   "jointAdvForm";
		   
	textFieldButtonGrp -label "Start:"
			   -ed true
			   -cw3 80 120 50
			   -buttonLabel "<<<"
			   -buttonCommand "string $objs[] = `ls -sl -typ joint`; textFieldButtonGrp -e -text $objs[0] jointInsertStart;" 
			   "jointInsertStart";
				
	formLayout -e 
			   -attachForm jointInsertStart "left" 5
			   -attachForm jointInsertStart "top" 0
			   -attachPosition jointInsertStart "right" 0 100
			   "jointAdvForm";
			   
	textFieldButtonGrp -label "End:"
			   -ed true
			   -cw3 80 120 50
			   -buttonLabel "<<<"
			   -buttonCommand "string $objs[] = `ls -sl -typ joint`; textFieldButtonGrp -e -text $objs[0] jointInsertEnd;" 
			   "jointInsertEnd";
				
	formLayout -e 
			   -attachForm jointInsertEnd "left" 5
			   -attachForm jointInsertEnd "top" 25
			   -attachPosition jointInsertEnd "right" 0 100
			   "jointAdvForm";
			   
	intSliderGrp -l "Num Joints"
		     -v 3
		     -field true
		     -minValue 1 -maxValue 10
		     -fieldMinValue 1 -fieldMaxValue 10
		     -cw3 65 30 30
		     jointNumSlider;
		     
	formLayout -e 
		   -attachForm jointNumSlider "left" 5
		   -attachForm jointNumSlider "top" 55
		   -attachPosition jointNumSlider "right" 0 100
		   "jointAdvForm";
			   
	button  -label "Insert Joints"
		-command "JTDinsertRollJoints(`textFieldButtonGrp -q -text jointInsertStart`, `textFieldButtonGrp -q -text jointInsertEnd`, `intSliderGrp -q -v jointNumSlider`);"
		-width 80
		-height 32
		-al "center"
		"jointInsertButton";
		
	formLayout -e 
		   -attachForm jointInsertButton "left" 45
		   -attachForm jointInsertButton "top" 85
		   -attachPosition jointInsertButton "right" 0 80
		   "jointAdvForm";
	
	setParent..;
	
	
	formLayout -e 
		   -attachForm jointAdvanced "top" 200
		   -attachForm jointAdvanced "left" 5
		   -attachPosition jointAdvanced "right" 0 100
		   $tab1;
		   
	setParent..;
	setParent..;
	
	
	string $tab2 = `formLayout -numberOfDivisions 100 -h 455`;
	
	textFieldButtonGrp -label "Start" 
			   -cw3 60 120 50
			   -buttonLabel "<<<"
			   -buttonCommand "textFieldButtonGrp -e -text \`ls -sl -typ joint\` spineStart;" 
			   "spineStart";
				
	formLayout -e 
			   -attachForm spineStart "left" 5
			   -attachForm spineStart "top" 10
			   -attachPosition spineStart "right" 0 100
			   $tab2;
			   
	textFieldButtonGrp -label "End" 
			   -cw3 60 120 50
			   -buttonLabel "<<<"
			   -buttonCommand "textFieldButtonGrp -e -text \`ls -sl -typ joint\` spineEnd;" 
			   "spineEnd";
				
	formLayout -e 
			   -attachForm spineEnd "left" 5
			   -attachForm spineEnd "top" 40
			   -attachPosition spineEnd "right" 0 100
			   $tab2;
			   
	textFieldButtonGrp -label "Root" 
			   -cw3 60 120 50
			   -buttonLabel "<<<"
			   -buttonCommand "textFieldButtonGrp -e -text \`ls -sl -typ joint\` spineRoot;" 
			   "spineRoot";
				
	formLayout -e 
			   -attachForm spineRoot "left" 5
			   -attachForm spineRoot "top" 70
			   -attachPosition spineRoot "right" 0 100
			   $tab2;
			   
	button  -label "Rig Spine"
		-command "setToolTo selectSuperContext; string $prim = JTDspineRig(`textFieldGrp -q -text chartfg`, `textFieldButtonGrp -q -text spineStart`, `textFieldButtonGrp -q -text spineEnd`, `textFieldButtonGrp -q -text spineRoot`, `floatSliderGrp -q -v fsg1`, `textFieldButtonGrp -q -text worldfbg`, `textFieldButtonGrp -q -text spineFKmid`); if($prim != \"\"){ textFieldButtonGrp -e -text $prim neckPrimAttach; textFieldButtonGrp -e -text $prim armPrimAttach; textFieldButtonGrp -e -text $prim legPrimAttach;}"
		-width 80
		-height 32
		-al "center"
		"spineButton";
		;
	formLayout -e 
		   -attachForm spineButton "top" 130
		   -attachForm spineButton "left" 50
		   -attachPosition spineButton "right" 0 80
		   $tab2;
		   
	frameLayout -l " Advanced" 
		    -cll true 
		    -cl true
		    -bv false
		    "spineAdvanced";
	
	formLayout -numberOfDivisions 100
		   "spineAdvForm";
		   
	textFieldButtonGrp -label "FK Mid:" 
		   -ed true
		   -cw3 60 120 50
		   -buttonLabel "<<<"
		   -buttonCommand "string $objs[] = `ls -sl -typ joint`; textFieldButtonGrp -e -text $objs[0] spineFKmid;" 
		   "spineFKmid";
				
	formLayout -e 
		   -attachForm spineFKmid "left" 5
		   -attachForm spineFKmid "top" 0
		   -attachPosition spineFKmid "right" 0 100
		   "spineAdvForm";
	
	setParent..;
	
	
	formLayout -e 
		   -attachForm spineAdvanced "top" 170
		   -attachForm spineAdvanced "left" 5
		   -attachPosition spineAdvanced "right" 0 100
		   $tab2;
			   
	setParent..;
	setParent..;

	

string $tab3 = `formLayout -numberOfDivisions 100 -h 455`;
	
	textFieldButtonGrp -label "Start" 
			   -cw3 60 120 50
			   -buttonLabel "<<<"
			   -buttonCommand "textFieldButtonGrp -e -text \`ls -sl -typ joint\` neckStart;" 
			   "neckStart";
				
	formLayout -e 
			   -attachForm neckStart "left" 5
			   -attachForm neckStart "top" 10
			   -attachPosition neckStart "right" 0 100
			   $tab3;
			   
	textFieldButtonGrp -label "End" 
			   -cw3 60 120 50
			   -buttonLabel "<<<"
			   -buttonCommand "textFieldButtonGrp -e -text \`ls -sl -typ joint\` neckEnd;" 
			   "neckEnd";
				
	formLayout -e 
			   -attachForm neckEnd "left" 5
			   -attachForm neckEnd "top" 40
			   -attachPosition neckEnd "right" 0 100
			   $tab3;
		   
	button  -label "Rig Neck"
		-command "setToolTo selectSuperContext; JTDneckRig(`textFieldGrp -q -text chartfg`, `textFieldButtonGrp -q -text neckStart`, `textFieldButtonGrp -q -text neckEnd`, `floatSliderGrp -q -v fsg1`, `textFieldButtonGrp -q -text worldfbg`, `textFieldButtonGrp -q -text neckPrimAttach`);"
		-width 80
		-height 32
		-al "center"
		"neckButton";
		;
	formLayout -e 
		   -attachForm neckButton "top" 130
		   -attachForm neckButton "left" 50
		   -attachPosition neckButton "right" 0 80
		   $tab3;
		   
	frameLayout -l " Advanced" 
		    -cll true 
		    -cl true
		    -bv false
		    "neckAdvanced";
	
	formLayout -numberOfDivisions 100
		   "neckAdvForm";
		   
	textFieldButtonGrp -label "Attach To:" 
			   -ed true
			   -cw3 60 120 50
			   -buttonLabel "<<<"
			   -buttonCommand "string $objs[] = `ls -sl`; string $prim = JTDgetAttachedPrim($objs[0], \"spine\"); if($prim != \"\") textFieldButtonGrp -e -text $prim neckPrimAttach;" 
			   "neckPrimAttach";
				
	formLayout -e 
			   -attachForm neckPrimAttach "left" 5
			   -attachForm neckPrimAttach "top" 0
			   -attachPosition neckPrimAttach "right" 0 100
			   "neckAdvForm";
	
	setParent..;
	
	
	formLayout -e 
		   -attachForm neckAdvanced "top" 170
		   -attachForm neckAdvanced "left" 5
		   -attachPosition neckAdvanced "right" 0 100
		   $tab3;
		   
	setParent..;
	setParent..;
	
	string $tab4 = `formLayout -numberOfDivisions 100 -h 455`;
	
	textFieldButtonGrp -label "Clavicle" 
			   -cw3 60 120 50
			   -buttonLabel "<<<"
			   -buttonCommand "{ string $foundChildren[]; string $selected[] = \`ls -sl -typ joint\`; textFieldButtonGrp -e -text $selected[0] clavbg; if((`checkBox -q -v armAdvCb`) && ($selected[0] != \"\")) {$foundChildren = guessChildJoints($selected[0], {\"*Sho*\", \"*sho*\", \"*SHO*\", \"*Elb*\", \"*elb*\", \"*ELB*\", \"*Wri*\", \"*wri*\", \"*WRI*\" },3); textFieldButtonGrp -e -text $foundChildren[0] shoulbg; textFieldButtonGrp -e -text $foundChildren[1] elbobg; textFieldButtonGrp -e -text $foundChildren[2] wrisbg; }}"
			   "clavbg";
			
	formLayout -e 
		   -attachForm clavbg "left" 5
		   -attachForm clavbg "top" 10
		   -attachPosition clavbg "right" 0 100
		   $tab4;
		   
	textFieldButtonGrp -label "Shoulder" 
			   -cw3 60 120 50
			   -buttonLabel "<<<"
			   -buttonCommand "{ string $foundChildren[]; string $selected[] = \`ls -sl -typ joint\`; textFieldButtonGrp -e -text $selected[0] shoulbg; if((`checkBox -q -v armAdvCb`) && ($selected[0] != \"\")) {$foundChildren = guessChildJoints($selected[0], { \"*Elb*\", \"*elb*\", \"*ELB*\", \"*Wri*\", \"*wri*\", \"*WRI*\" },2); textFieldButtonGrp -e -text $foundChildren[0] elbobg; textFieldButtonGrp -e -text $foundChildren[1] wrisbg; }}"
			   "shoulbg";
			
	formLayout -e 
		   -attachForm shoulbg "left" 5
		   -attachForm shoulbg "top" 40
		   -attachPosition shoulbg "right" 0 100
		   $tab4;
		   
	textFieldButtonGrp -label "Elbow" 
			   -cw3 60 120 50
			   -buttonLabel "<<<"
			   -buttonCommand "{ string $foundChildren[]; string $selected[] = \`ls -sl -typ joint\`; textFieldButtonGrp -e -text $selected[0] elbobg; if((`checkBox -q -v armAdvCb`) && ($selected[0] != \"\")) {$foundChildren = guessChildJoints($selected[0], {\"*Wri*\", \"*wri*\", \"*WRI*\" },1); textFieldButtonGrp -e -text $foundChildren[0] wrisbg; }}"
			   "elbobg";
				
	formLayout -e 
		   -attachForm elbobg "left" 5
		   -attachForm elbobg "top" 70
		   -attachPosition elbobg "right" 0 100
		   $tab4;
		   
	textFieldButtonGrp -label "Wrist" 
			   -cw3 60 120 50
			   -buttonLabel "<<<"
			   -buttonCommand "textFieldButtonGrp -e -text \`ls -sl -typ joint\` wrisbg; " 
			   "wrisbg";
					
	formLayout -e 
		   -attachForm wrisbg "left" 5
		   -attachForm wrisbg "top" 100
		   -attachPosition wrisbg "right" 0 100
		   $tab4;
		   
	intSliderGrp -l "Roll Joints"
		     -v 3
		     -field true
		     -minValue 1 -maxValue 10
		     -fieldMinValue 1 -fieldMaxValue 10
		     -cw3 60 30 30
		     isg1;
		     
	formLayout -e 
		   -attachForm isg1 "left" 5
		   -attachForm isg1 "top" 130
		   $tab4;	   
		       
	radioButtonGrp  -numberOfRadioButtons 2
			-l "Side"
			-labelArray2 "L" "R"    
			-sl 1
			-cw3 60 30 30
			-ct3 "left" "left" "left"
			"rb5"
			;
		  		
	formLayout -e 
		   -attachForm rb5 "top" 180
		   -attachForm rb5 "left" 5
		   -attachPosition rb5 "right" 0 65
		   $tab4;
		   
 		
	button  -label "Rig Arm"
		-command "setToolTo selectSuperContext; JTDarmRig(`textFieldGrp -q -text chartfg`, `textFieldButtonGrp -q -text clavbg`, `textFieldButtonGrp -q -text shoulbg`, `textFieldButtonGrp -q -text elbobg`, `textFieldButtonGrp -q -text wrisbg`, `intSliderGrp -q -v isg1`, `radioButtonGrp -q -sl rb5`, `floatSliderGrp -q -v fsg1`, `textFieldButtonGrp -q -text worldfbg`, `textFieldButtonGrp -q -text armPrimAttach`);"
		-width 80
		-height 32
		-al "center"
		"b2";
		
	formLayout -e 
		   -attachForm b2 "top" 200
		   -attachForm b2 "left" 50
		   -attachPosition b2 "right" 0 80
		   $tab4;
		   
	frameLayout -l " Advanced" 
		    -cll true 
		    -cl true
		    -bv false
		    "armAdvanced";
	
	formLayout -numberOfDivisions 100
		   "armAdvForm";
		   
	textFieldButtonGrp -label "Attach To:" 
			   -ed true
			   -cw3 60 120 50
			   -buttonLabel "<<<"
			   -buttonCommand "string $objs[] = `ls -sl`; string $prim = JTDgetAttachedPrim($objs[0], \"spine\"); if($prim != \"\") textFieldButtonGrp -e -text $prim armPrimAttach;" 
			   "armPrimAttach";
				
	formLayout -e 
			   -attachForm armPrimAttach "left" 5
			   -attachForm armPrimAttach "top" 0
			   -attachPosition armPrimAttach "right" 0 100
			   "armAdvForm";
			   
	checkBox 	-w 200
			-v 1
			-label "Auto-find children"
			"armAdvCb";
					
	formLayout -e 
		   -attachForm armAdvCb "top" 30
		   -attachForm armAdvCb "left" 5
		   armAdvForm;
	
	setParent..;
	
	
	formLayout -e 
		   -attachForm armAdvanced "top" 240
		   -attachForm armAdvanced "left" 5
		   -attachPosition armAdvanced "right" 0 100
		   $tab4;
		   
	setParent..;
	setParent..;


	string $tab5 = `formLayout -numberOfDivisions 100 -h 600`;
	
	textFieldButtonGrp -label "Hip" 
			   -cw3 60 120 50
			   -buttonLabel "<<<"
			   -buttonCommand "{ string $foundChildren[]; string $selected[] = \`ls -sl -typ joint\`; textFieldButtonGrp -e -text $selected[0] hiptfbg; if((`checkBox -q -v legAdvCb`) && ($selected[0] != \"\")) {$foundChildren = guessChildJoints($selected[0], {\"*Kne*\", \"*kne*\", \"*KNE*\", \"*Ank*\", \"*ank*\", \"*ANK*\", \"*Hee*\", \"*hee*\", \"*HEE*\", \"*Bal*\", \"*bal*\", \"*BAL*\" },4); textFieldButtonGrp -e -text $foundChildren[0] kneetfbg; textFieldButtonGrp -e -text $foundChildren[1] ankletfbg; textFieldButtonGrp -e -text $foundChildren[2] heeltfbg; textFieldButtonGrp -e -text $foundChildren[3] balltfbg; }}"
			   "hiptfbg";
			
	formLayout -e 
		   -attachForm hiptfbg "left" 5
		   -attachForm hiptfbg "top" 10
		   -attachPosition hiptfbg "right" 0 100
		   $tab5;
		   
	textFieldButtonGrp -label "Knee" 
			   -cw3 60 120 50
			   -buttonLabel "<<<"
			   -buttonCommand "{ string $foundChildren[]; string $selected[] = \`ls -sl -typ joint\`; textFieldButtonGrp -e -text $selected[0] kneetfbg; if((`checkBox -q -v legAdvCb`) && ($selected[0] != \"\")) {$foundChildren = guessChildJoints($selected[0], {\"*Ank*\", \"*ank*\", \"*ANK*\", \"*Hee*\", \"*hee*\", \"*HEE*\", \"*Bal*\", \"*bal*\", \"*BAL*\" },3); textFieldButtonGrp -e -text $foundChildren[0] ankletfbg; textFieldButtonGrp -e -text $foundChildren[1] heeltfbg; textFieldButtonGrp -e -text $foundChildren[2] balltfbg;}}"
			   "kneetfbg";
				
	formLayout -e 
		   -attachForm kneetfbg "left" 5
		   -attachForm kneetfbg "top" 40
		   -attachPosition kneetfbg "right" 0 100
		   $tab5;
		   
	textFieldButtonGrp -label "Ankle" 
			   -cw3 60 120 50
			   -buttonLabel "<<<"
			   -buttonCommand "{ string $foundChildren[]; string $selected[] = \`ls -sl -typ joint\`; textFieldButtonGrp -e -text $selected[0] ankletfbg; if((`checkBox -q -v legAdvCb`) && ($selected[0] != \"\")) {$foundChildren = guessChildJoints($selected[0], {\"*Hee*\", \"*hee*\", \"*HEE*\", \"*Bal*\", \"*bal*\", \"*BAL*\" },2); textFieldButtonGrp -e -text $foundChildren[0] heeltfbg; textFieldButtonGrp -e -text $foundChildren[1] balltfbg;}}"
			   "ankletfbg";
					
	formLayout -e 
		   -attachForm ankletfbg "left" 5
		   -attachForm ankletfbg "top" 70
		   -attachPosition ankletfbg "right" 0 100
		   $tab5;
		   
	textFieldButtonGrp -label "Heel" 
			   -cw3 60 120 50
			   -buttonLabel "<<<"
			   -buttonCommand "{ string $foundChildren[]; string $selected[] = \`ls -sl -typ joint\`; textFieldButtonGrp -e -text $selected[0] heeltfbg; if((`checkBox -q -v legAdvCb`) && ($selected[0] != \"\")) {$foundChildren = guessChildJoints($selected[0], {\"*Bal*\", \"*bal*\", \"*BAL*\" },1); textFieldButtonGrp -e -text $foundChildren[0] balltfbg;}}"
			   "heeltfbg";
					
	formLayout -e 
		   -attachForm heeltfbg "left" 5
		   -attachForm heeltfbg "top" 100
		   -attachPosition heeltfbg "right" 0 100
		   $tab5;
		   
	textFieldButtonGrp -label "Ball" 
			   -cw3 60 120 50
			   -buttonLabel "<<<"
			   -buttonCommand "textFieldButtonGrp -e -text \`ls -sl -typ joint\` balltfbg;" 
			   "balltfbg";
						
	formLayout -e 
		   -attachForm balltfbg "left" 5
		   -attachForm balltfbg "top" 130
		   -attachPosition balltfbg "right" 0 100
		   $tab5;
		      
	intSliderGrp -l "Roll Joints"
		     -v 3
		     -field true
		     -minValue 1 -maxValue 10
		     -fieldMinValue 1 -fieldMaxValue 10
		     -cw3 60 30 30
		     legisg;
		     
	formLayout -e 
		   -attachForm legisg "left" 5
		   -attachForm legisg "top" 160
		   $tab5;	   
		       
	radioButtonGrp  -numberOfRadioButtons 2
			-l "Side"
			-labelArray2 "L" "R"    
			-sl 1
			-cw3 60 30 30
			-ct3 "left" "left" "left"
			"legrb2"
			;
		  		
	formLayout -e 
		   -attachForm legrb2 "top" 210
		   -attachForm legrb2 "left" 5
		   -attachPosition legrb2 "right" 0 65
		   $tab5;
		   
 		
	button  -label "Rig Leg"
		-command "setToolTo selectSuperContext; JTDlegRig(`textFieldGrp -q -text chartfg`, `textFieldButtonGrp -q -text hiptfbg`, `textFieldButtonGrp -q -text kneetfbg`, `textFieldButtonGrp -q -text ankletfbg`, `textFieldButtonGrp -q -text heeltfbg`, `textFieldButtonGrp -q -text balltfbg`, `intSliderGrp -q -v legisg`, `radioButtonGrp -q -sl legrb2`, `floatSliderGrp -q -v fsg1`, `textFieldButtonGrp -q -text worldfbg`, `textFieldButtonGrp -q -text legPrimAttach`, `checkBox -q -v feetPivotCb`);"
		-width 80
		-height 32
		-al "center"
		"legb";
		
	formLayout -e 
		   -attachForm legb "top" 230
		   -attachForm legb "left" 50
		   -attachPosition legb "right" 0 80
		   $tab5;
		   
	frameLayout -l " Advanced" 
		    -cll true 
		    -cl true
		    -bv false
		    "legAdvanced";
	
	formLayout -numberOfDivisions 100
		   "legAdvForm";
		   
	textFieldButtonGrp -label "Attach To:" 
			   -ed true
			   -cw3 60 120 50
			   -buttonLabel "<<<"
			   -buttonCommand "string $objs[] = `ls -sl`; string $prim = JTDgetAttachedPrim($objs[0], \"spine\"); if($prim != \"\") textFieldButtonGrp -e -text $prim legPrimAttach;" 
			   "legPrimAttach";
				
	formLayout -e 
		   -attachForm legPrimAttach "left" 5
		   -attachForm legPrimAttach "top" 0
		   -attachPosition legPrimAttach "right" 0 100
		   "legAdvForm";
			   
	checkBox 	-w 200
			-v 1
			-label "Auto-find children"
			"legAdvCb";
					
	formLayout -e 
		   -attachForm legAdvCb "top" 25
		   -attachForm legAdvCb "left" 5
		   legAdvForm;
			   
	checkBox 	-w 300
			-v 1
			-label "Foot Pivots According to Joint Orientation"
			"feetPivotCb";
				
	formLayout -e 
		   -attachForm feetPivotCb "top" 45
		   -attachForm feetPivotCb "left" 5
		   legAdvForm;
	
	
	setParent..;
	
	
	formLayout -e 
		   -attachForm legAdvanced "top" 270
		   -attachForm legAdvanced "left" 5
		   -attachPosition legAdvanced "right" 0 100
		   $tab5;
		   
	setParent..;
	setParent..;

string $tab6 = `formLayout -numberOfDivisions 100 -h 455`;
	
	textFieldButtonGrp -label "Wrist" 
			   -cw3 80 120 50
			   -buttonLabel "<<<"
			   -buttonCommand "textFieldButtonGrp -e -text \`ls -sl -typ joint\` wristbg;" 
			   "wristbg";
			
	formLayout -e 
		   -attachForm wristbg "left" 25
		   -attachForm wristbg "top" 10
		   -attachPosition wristbg "right" 0 100
		   $tab6;
	
	
	textFieldButtonGrp -label "Metacarpal (0)" 
			   -cw3 80 120 50
			   -buttonLabel "<<<"
			   -buttonCommand "{ string $selected[] = \`ls -sl -typ joint\`; textFieldButtonGrp -e -text $selected[0] metacarpalbg; if((`checkBox -q -v fingerAdvCb`) && ($selected[0] != \"\")) {string $child[] = `listRelatives -c -typ joint $selected[0]`; string $fields[] = {\"proximalbg\", \"Intermediatebg\", \"distalbg\"}; for($i=0;$i<3;$i++) {if($child[0] != \"\") {textFieldButtonGrp -e -text $child[0] $fields[$i]; $child = `listRelatives -c -typ joint $child[0]`; }}} }"
			   "metacarpalbg";
			
	formLayout -e 
		   -attachForm metacarpalbg "left" 25
		   -attachForm metacarpalbg "top" 45
		   -attachPosition metacarpalbg "right" 0 100
		   $tab6;
		   
	textFieldButtonGrp -label "Proximal (1)" 
			   -cw3 80 120 50
			   -buttonLabel "<<<"
			   -buttonCommand "{string $selected[] = \`ls -sl -typ joint\`; textFieldButtonGrp -e -text $selected[0] proximalbg; if((`checkBox -q -v fingerAdvCb`) && ($selected[0] != \"\")) {string $child[] = `listRelatives -c -typ joint $selected[0]`; string $fields[] = {\"Intermediatebg\", \"distalbg\"}; for($i=0;$i<2;$i++) {if($child[0] != \"\") {textFieldButtonGrp -e -text $child[0] $fields[$i]; $child = `listRelatives -c -typ joint $child[0]`; }}}}"  
			   "proximalbg";
			
	formLayout -e 
		   -attachForm proximalbg "left" 25
		   -attachForm proximalbg "top" 75
		   -attachPosition proximalbg "right" 0 100
		   $tab6;
		   
	textFieldButtonGrp -label "Intermediate (2)" 
			   -cw3 85 120 50
			   -buttonLabel "<<<"
			   -buttonCommand "textFieldButtonGrp -e -text \`ls -sl -typ joint\` Intermediatebg; " 
			   "Intermediatebg";
				
	formLayout -e 
		   -attachForm Intermediatebg "left" 20
		   -attachForm Intermediatebg "top" 105
		   -attachPosition Intermediatebg "right" 0 100
		   $tab6;
		   
	textFieldButtonGrp -label "Distal (3)" 
			   -cw3 80 120 50
			   -buttonLabel "<<<"
			   -buttonCommand "textFieldButtonGrp -e -text \`ls -sl -typ joint\` distalbg; " 
			   "distalbg";
					
	formLayout -e 
		   -attachForm distalbg "left" 25
		   -attachForm distalbg "top" 135
		   -attachPosition distalbg "right" 0 100
		   $tab6;


	radioButtonGrp  -numberOfRadioButtons 2
			-l "Curl Axis"
			-labelArray2 "Y" "Z"
			-sl 2
			-cw3 50 35 35  
			-ct3 "left" "left" "left"
			"curlAxisrb"
			;
	
	formLayout -e 
		   -attachForm curlAxisrb "left" 5
		   -attachForm curlAxisrb "top" 170
		   -attachPosition curlAxisrb "right" 0 35
		   $tab6;
		   
	checkBox 	-w 100
			-v 0
			-label "Negative"
			"curlNeg";
			
	formLayout -e
		   -attachForm curlNeg "top" 170
		   -attachControl curlNeg  "left" 0 curlAxisrb
		   $tab6;

	radioButtonGrp  -numberOfRadioButtons 4
			-l "Type"
			-labelArray4 "Index" "Middle" "Ring" "Pinky"
			-sl 1
			-cw5 50 50 55 50 50 
			-ct5 "left" "left" "left" "left" "left" 
			"fingerrb1"
			;
		  		
	formLayout -e 
		   -attachForm fingerrb1 "left" 5
		   -attachForm fingerrb1 "top" 190
		   -attachPosition fingerrb1 "right" 0 68
		   $tab6;
		   
	radioButtonGrp -numberOfRadioButtons 2
		       -l ""
		       -labelArray2 "Thumb" "Extra"
		       -cw3 1 60 55
		       -ct3 "left" "left" "left"
		       -shareCollection "fingerrb1"
		       "thumbrb"
		       ;
		    
	formLayout -e 
		   -attachForm thumbrb "top" 190
		   -attachControl thumbrb "left" 0 fingerrb1
		   $tab6;

	radioButtonGrp  -numberOfRadioButtons 2
			-l "Side"
			-labelArray2 "L" "R"    
			-sl 1
			-cw3 50 35 35
			-ct3 "left" "left" "left"
			"fingerrb2"
			;
		  		
	formLayout -e 
		   -attachForm fingerrb2 "top" 210
		   -attachForm fingerrb2 "left" 5
		   -attachPosition fingerrb2 "right" 0 65
		   $tab6;
		   
 		
	button  -label "Rig Finger"
		-command "setToolTo selectSuperContext; JTDfingerRig(`textFieldButtonGrp -q -text wristbg`, `textFieldButtonGrp -q -text metacarpalbg`, `textFieldButtonGrp -q -text proximalbg`, `textFieldButtonGrp -q -text Intermediatebg`, `textFieldButtonGrp -q -text distalbg`, `radioButtonGrp -q -sl curlAxisrb`, `checkBox -q -v curlNeg`, `radioButtonGrp -q -sl fingerrb1`, `radioButtonGrp -q -sl thumbrb`, `radioButtonGrp -q -sl fingerrb2`, `textFieldGrp -q -text chartfg`, `floatSliderGrp -q -v fsg1`);"
		-width 80
		-height 32
		-al "center"
		"fingerb1";
		
	formLayout -e 
		   -attachForm fingerb1 "top" 235
		   -attachForm fingerb1 "left" 50
		   -attachPosition fingerb1 "right" 0 80
		   $tab6;
		   
	frameLayout -l " Advanced" 
		    -cll true 
		    -cl true
		    -bv false
		    "fingerAdvanced";
	
	formLayout -numberOfDivisions 100
		   "fingerAdvForm";
		   
	checkBox 	-w 200
			-v 1
			-label "Auto-find children"
			"fingerAdvCb";
				
	formLayout -e 
		   -attachForm fingerAdvCb "top" 10
		   -attachForm fingerAdvCb "left" 5
		   fingerAdvForm;
	
	setParent..;
	
	
	formLayout -e 
		   -attachForm fingerAdvanced "top" 285
		   -attachForm fingerAdvanced "left" 5
		   -attachPosition fingerAdvanced "right" 0 100
		   $tab6;
		   
	setParent..;
	setParent..;


	string $tab7 = `formLayout -numberOfDivisions 100 -h 455`;

	textFieldButtonGrp -label "Child" 
			   -cw3 60 120 50
			   -buttonLabel "<<<"
			   -buttonCommand "int $cnt = 0; int $choice = 1; string $parent; string $connections[]; string $target[] = `ls -sl -typ transform`; if(`objExists( ($target[0]+\".parentType\") )` ) $choice = getAttr ($target[0]+\".parentType\"); textFieldButtonGrp -e -text $target[0] tarbg; textScrollList -e -ra parentScroll; while(`objExists( ($target[0]+\".Parent_\"+$cnt) )` ) { $connections = `listConnections ($target[0]+\".Parent_\"+$cnt)`; if(endsWith($connections[0], \"_DynDriver\")) $parent = substitute(\"_DynDriver\", $connections[0], \"\"); textScrollList -e -append $parent parentScroll; $cnt++; } radioButtonGrp -e -sl $choice parentrb; textFieldButtonGrp -e -text \"\" dynMenuAdd;" 
			   "tarbg";
				
	formLayout -e 
		   -attachForm tarbg "left" 5
		   -attachForm tarbg "top" 10
		   -attachPosition tarbg "right" 0 100
		   $tab7;
		   
	text -label "Parents: "
	     parentLabel;
			
	formLayout -e 
		   -attachForm parentLabel "left" 10
		   -attachForm parentLabel "top" 40
		   -attachPosition parentLabel "right" 0 100
		   $tab7;

 	textScrollList -numberOfRows 5 -allowMultiSelection false 
 		-showIndexedItem 4
 		"parentScroll";
 		
 	formLayout -e 
 		   -attachForm parentScroll "left" 10
 		   -attachForm parentScroll "top" 65
 		   -attachPosition parentScroll "right" 0 95
		   $tab7;

	button  -label "Add Parent"
		-command "string $item[] = `ls -sl`; textScrollList -e -append $item[0] parentScroll;"
		-width 80
		-height 32
		-al "center"
		"parentButton";
	
	formLayout -e 
 		   -attachForm parentButton "left" 10
 		   -attachForm parentButton "top" 140
 		   -attachPosition parentButton "right" 0 95
		   $tab7;
		   
	button  -label "Remove from List"
		-command "int $rem[] = `textScrollList -q -sii parentScroll`; textScrollList -e -rii $rem[0] parentScroll;"
		-width 80
		-height 32
		-al "center"
		"removeButton";
	
	formLayout -e 
 		   -attachForm removeButton "left" 10
 		   -attachForm removeButton "top" 180
 		   -attachPosition removeButton "right" 0 95
		   $tab7;

	radioButtonGrp  -numberOfRadioButtons 3
			-l "Parent Type:"
			-labelArray3 "Parent" "Rot" "Rot/Trans"
			-sl 1
			-cw4 70 55 40 40
			-ct4 "left" "left" "left" "left"
			"parentrb";
		
	formLayout -e 
		   -attachForm parentrb "top" 220
		   -attachForm parentrb "left" 10
		   -attachPosition parentrb "right" 0 95
		   $tab7;
		   
	button  -label "Create Dynamic Parent Switch"
		-command "JTDdynParent(`textFieldButtonGrp -q -text tarbg`, `textScrollList -q -ai parentScroll`, `radioButtonGrp -q -sl parentrb`, `textFieldButtonGrp -q -text dynMenuAdd`)"
		-width 80
		-height 32
		-al "center"
		"createDynButton";
	
	formLayout -e 
 		   -attachForm createDynButton "left" 10
 		   -attachForm createDynButton "top" 245
 		   -attachPosition createDynButton "right" 0 95
		   $tab7;

	frameLayout -l " Advanced" 
		    -cll true 
		    -cl true
		    -bv false
		    "dynAdvanced";
	
	formLayout -numberOfDivisions 100
		   "dynAdvForm";
		   
	textFieldButtonGrp -label "Add Menu To:"
			   -ed true
			   -cw3 80 120 50
			   -buttonLabel "<<<"
			   -buttonCommand "string $objs[] = `ls -sl`; textFieldButtonGrp -e -text $objs[0] dynMenuAdd;" 
			   "dynMenuAdd";
				
	formLayout -e 
			   -attachForm dynMenuAdd "left" 5
			   -attachForm dynMenuAdd "top" 0
			   -attachPosition dynMenuAdd "right" 0 100
			   "dynAdvForm";
	
	setParent..;
	
	
	formLayout -e 
		   -attachForm dynAdvanced "top" 300
		   -attachForm dynAdvanced "left" 5
		   -attachPosition dynAdvanced "right" 0 100
		   $tab7;
		   
	setParent..;
	setParent..;
	
	string $tab8 = `formLayout -numberOfDivisions 100 -h 455`;

	button  -label "Re-Connect Rig"
		-command "JTDconnectTo(`textFieldGrp -q -text chartfg`)"
		-width 80
		-height 32
		-al "center"
		connectButton;
				
	formLayout -e 
		   -attachForm connectButton "left" 100
		   -attachForm connectButton "top" 10
		   -attachPosition connectButton "right" 25 75
		   $tab8;
		   
	button  -label "Disconnect Rig"
		-command "JTDdisconnectFrom(`textFieldGrp -q -text chartfg`)"
		-width 80
		-height 32
		-al "center"
		disConnectButton;
				
	formLayout -e 
		   -attachForm disConnectButton "left" 100
		   -attachForm disConnectButton "top" 50
		   -attachPosition disConnectButton "right" 25 75
		   $tab8;
		   
	setParent..;
	setParent..;

	tabLayout -edit 
	-tabLabel $tab1 "Joints"
	-tabLabel $tab2 "Spine"
	-tabLabel $tab3 "Neck"
	-tabLabel $tab4 "Arm"
	-tabLabel $tab5 "Leg"
	-tabLabel $tab6 "Fingers"
	-tabLabel $tab7 "DynParent"
	-tabLabel $tab8 "Extras"
	$tabs;
	
showWindow;
}	
	

global proc int JTDorientJoint(string $selectedJoints[], int $aim, int $up, int $world, int $planeNormal, int $toWorld, int $orManual)
{
string $parent[];
string $child[];
string $worldJoint[];
float $aimVector[];
float $upVector[];
float $worldUpVector[];

$selectedJoints = JTDfilterSelection($selectedJoints);
if(size($selectedJoints) == 0) return 0;

if($aim==1) $aimVector = {1,0,0};
if($aim==2) $aimVector = {0,1,0};
if($aim==3) $aimVector = {0,0,1};
if($aim==-1) $aimVector = {-1,0,0};
if($aim==-2) $aimVector = {0,-1,0};
if($aim==-3) $aimVector = {0,0,-1};

if($up==1) $upVector = {1,0,0};
if($up==2) $upVector = {0,1,0};
if($up==3) $upVector = {0,0,1};
if($up==-1) $upVector = {-1,0,0};
if($up==-2) $upVector = {0,-1,0};
if($up==-3) $upVector = {0,0,-1};

if($world==1) $worldUpVector = {1,0,0};
if($world==2) $worldUpVector = {0,1,0};
if($world==3) $worldUpVector = {0,0,1};
if($world==-1) $worldUpVector = {-1,0,0};
if($world==-2) $worldUpVector = {0,-1,0};
if($world==-3) $worldUpVector = {0,0,-1};


if(size($selectedJoints) == 3)
{
	if($planeNormal == 1)
	{
		$worldUpVector = JTDgetPlaneNormal($selectedJoints[0],$selectedJoints[1],$selectedJoints[2]);
	}
	if($planeNormal == -1)
	{
		$worldUpVector = JTDgetPlaneNormal($selectedJoints[0],$selectedJoints[1],$selectedJoints[2]);
		$worldUpVector[0] = ($worldUpVector[0]*-1);
		$worldUpVector[1] = ($worldUpVector[1]*-1);
		$worldUpVector[2] = ($worldUpVector[2]*-1);
	}
}
else if($planeNormal == 1)
{
	print "\nERROR: must select only 3 joints to use 3 Joint Normal option\n";
	return 0;
}

for($joint in $selectedJoints)
{
	$child = `listRelatives -c -type joint $joint`;
	if(size($child) == 1) //otherwise it's a root joint or an end joint without a child
	{
		//checking to make sure we dont create two objects with the same name
		$childJoint = `parent -w $child`; //unparent the joint
		
		if($orManual == 1) 
		{
			joint -e -zso $joint ;
			makeIdentity -apply true $joint;
		}
		else if($toWorld == 1)
		{
			spaceLocator -p 0 0 0 -n JTDWorldHelper;
			orientConstraint -weight 1 -n JTDorientConstraint JTDWorldHelper $joint;
			delete JTDorientConstraint;
			JTDfreezeJointOrient($joint);
			delete JTDWorldHelper;
		}
		else
		{	
			aimConstraint -aimVector $aimVector[0] $aimVector[1] $aimVector[2] -upVector $upVector[0] $upVector[1] $upVector[2] -worldUpType "vector" -worldUpVector $worldUpVector[0] $worldUpVector[1] $worldUpVector[2] -n "JTDaimConstraint" $childJoint $joint;
			delete JTDaimConstraint;
			JTDfreezeJointOrient($joint);
			
		}
		parent $childJoint $joint;  //put the joint back where it belongs
	}
	
	else if(size($child) == 0) //we have an end joint so just use the axis of its parent
	{
		if($toWorld == 1)
		{
			spaceLocator -p 0 0 0 -n JTDWorldHelper;
			orientConstraint -weight 1 -n JTDorientConstraint JTDWorldHelper $joint;
			delete JTDorientConstraint;
			JTDfreezeJointOrient($joint);
			delete JTDWorldHelper;		
		}
		else
		{	
			$parent = `listRelatives -p -type joint $joint`;
			if(size($parent) != 0) orientConstraint -offset 0 0 0 -weight 1 -n tempOrConstr $parent $joint;
			delete tempOrConstr;
			JTDfreezeJointOrient($joint);
		}
	}
	else //we have a joint with multiple children
	{
		
		if($toWorld == 1)
		{
			for($multChild in $child)
			{
				parent -w $multChild; //unparent all joints
			}
		
			spaceLocator -p 0 0 0 -n JTDWorldHelper;
			orientConstraint -weight 1 -n JTDorientConstraint JTDWorldHelper $joint;
			delete JTDorientConstraint;
			JTDfreezeJointOrient($joint);
			delete JTDWorldHelper;
			
			for($multChild in $child)
			{
				parent $multChild $joint;  //put the joint back where it belongs
			}
		}
		
	
	}
}

select -r $selectedJoints;
return 1;
}

global proc int JTDfreezeJointOrient(string $joint)
{
string $parent[];
string $aimHelper[] = `spaceLocator -p 0 0 0`;
$parent = `listRelatives -p -type joint $joint`;
if($parent[0] != "") parent $aimHelper[0] $parent[0];
makeIdentity -apply true -t 1 -r 1 $aimHelper[0];
orientConstraint -weight 1 -n JTDorientConstraint $joint $aimHelper[0];
delete JTDorientConstraint;



if( (`getAttr -se ($joint+".rx")`) && (`getAttr -se ($joint+".ry")`) && (`getAttr -se ($joint+".rz")`) )
{
	setAttr ($joint+".rx") 0;
	setAttr ($joint+".jointOrientX") `getAttr ($aimHelper[0]+".rx")`;
	
	setAttr ($joint+".ry") 0;
	setAttr ($joint+".jointOrientY") `getAttr ($aimHelper[0]+".ry")`;
	
	setAttr ($joint+".rz") 0;
	setAttr ($joint+".jointOrientZ") `getAttr ($aimHelper[0]+".rz")`;
}
else 
{
	warning ("Cannot orient: "+$joint+" b/c it is locked or connected");
	delete $aimHelper;
	return 0;
}

delete $aimHelper;
return 1;
}

global proc float[] JTDgetPlaneNormal(string $joint1, string $joint2, string $joint3)
{
float $vectorA[];
float $vectorB[];
float $cross[];

float $posA[] = `xform -q -ws -rp $joint1`;
float $posB[] = `xform -q -ws -rp $joint2`;
float $posC[] = `xform -q -ws -rp $joint3`;

$vectorA[0] = $posA[0]-$posB[0];
$vectorA[1] = $posA[1]-$posB[1];
$vectorA[2] = $posA[2]-$posB[2];

$vectorB[0] = $posC[0]-$posB[0];
$vectorB[1] = $posC[1]-$posB[1];
$vectorB[2] = $posC[2]-$posB[2];

$cross = `crossProduct $vectorA $vectorB 1 1`;
return $cross;
}

global proc string[] JTDfilterSelection(string $selected[])
{
int $i = 0;
string $jointsToReturn[];

for($sel in $selected)
{
	if( (`objectType -isType "joint" $sel`) && (match("rotateAxis", $sel) != "rotateAxis") )
	{
		$jointsToReturn[$i] = $sel;
		$i++;
	}
}
return $jointsToReturn;
}

//attempt to guess the child joints first based on name, then based on the difference in angle - because we dont want to include roll joints 
global proc string[] guessChildJoints(string $joint, string $searchStrings[], int $amountToLookFor)
{
string $buffer = $joint; //check against the child to make sure it's a new "type" of joint, not just a roll joint that has a similar name
string $child[] = `listRelatives -c -typ joint $joint`;
string $foundJoints[]; 
if($child[0] == "") return $foundJoints;

float $startVector[] = JTDgetVector($buffer, $child[0]);
float $compVector[]= JTDgetVector($buffer, $child[0]); //a temp vector
float $angle;

int $cnt = 0; //the number of found joints

while($child[0] != "")
{
	//do name matching first
	for($searching in $searchStrings)
	{
		if( gmatch($child[0], ("*"+$searching+"*") ) && !gmatch($buffer, ("*"+$searching+"*")) ) 
		{
			$foundJoints[$cnt] = $child[0]; 
			$cnt++;
		}
		$buffer = $child[0];
		if($child[0] != "") $child = `listRelatives -c -typ joint $child[0]`;
		else break;
	}
}

if($cnt != $amountToLookFor)
{
	//name matching failed so do angle matching next - i.e. if theres a big change in angle from one joint to the next, it's probably a new "type" of joint - not a roll joint
	
	$buffer = $joint;
	$child = `listRelatives -c -typ joint $joint`;
	$cnt = 0;
	
	while($child[0] != "")
	{
		$startVector = JTDgetVector($buffer, $child[0]);
		$buffer = $child[0];
		if($child[0] != "") $child = `listRelatives -c -typ joint $child[0]`;
		else break;
	
		if($child[0] != "") $compVector = JTDgetVector($buffer, $child[0]);
		
		$angle = rad_to_deg(`angle <<$startVector[0], $startVector[1], $startVector[2]>> <<$compVector[0], $compVector[1], $compVector[2]>>`);
		if(equivalentTol($angle, 0, 0.001)) $angle = 0;
		
		if($angle > 1) //an less than this and its pretty much in a straight line anyway
		{
			$foundJoints[$cnt] = $buffer; 
			$cnt++;//there's a new type of joint
		} 
		if($cnt >= $amountToLookFor) break;
	}
}

return $foundJoints;
}

//finds the vector pointing from the first "point" to the second "point"
global proc float[] JTDgetVector(string $pos1, string $pos2)
{
float $A[] = `xform -q -ws -rp $pos1`;
float $B[] = `xform -q -ws -rp $pos2`;

float $dx = $A[0]-$B[0]; 
float $dy = $A[1]-$B[1]; 
float $dz = $A[2]-$B[2]; 

return {$dx, $dy, $dz};
}

